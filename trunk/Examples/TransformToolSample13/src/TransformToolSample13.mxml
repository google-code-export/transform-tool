<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"  
			   xmlns:view="com.vstyran.transform.view.*" 
			   xmlns:model="com.vstyran.transform.model.*"
			   width="460" height="300" xmlns:local="*" 
			   viewSourceURL="http://vstyran-flex.ho.ua/TransformTool2/examples/TransformToolSample13/srcview/index.html" 
			   xmlns:connectors="com.vstyran.transform.connectors.*" xmlns:managers="com.vstyran.transform.managers.*">
	<fx:Script>
		<![CDATA[
			import com.vstyran.transform.events.TransformEvent;
			import com.vstyran.transform.model.DisplayData;
			import com.vstyran.transform.model.MultiDisplayData;
			import com.vstyran.transform.utils.DataUtil;
			
			import mx.core.UIComponent;
			
			protected function select(event:MouseEvent):void
			{
				if(event.shiftKey || event.ctrlKey)
				{
					var targets:Array = connector.targets;
					
					var index:int = targets.indexOf(event.target as UIComponent);
					if(index == -1)
						targets.push(event.target as UIComponent);
					else
						targets.splice(index, 1);
					
					connector.targets = targets;		
				}
				else
					connector.targets = [event.target as UIComponent];
				
				skipUpHandler = true;
				tool.startMoving(event);
			}
			
			protected function upHandler(event:MouseEvent):void
			{
				if(!skipUpHandler)
				{
					if(event.shiftKey || event.ctrlKey)
					{
						var targets:Array = connector.targets;
						
						var index:int = targets.indexOf(event.target as UIComponent);
						if(index != -1)
							targets.splice(index, 1);
						
						connector.targets = targets;		
					}
					else
						connector.targets = [event.target as UIComponent];
				}
				
				skipUpHandler = false;
			}
			
			private var skipUpHandler:Boolean;
			protected function tool_transformationCompleteHandler(event:TransformEvent):void
			{
				skipUpHandler = true;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:Group  width="460" height="300" verticalCenter="0" horizontalCenter="0">
		
		<!-- background fill -->
		<s:Rect top="0" right="0" left="0" bottom="0">
			<s:fill>
				<s:SolidColor color="#dddddd"/>
			</s:fill>
		</s:Rect>
		<s:Rect id="border" top="45" right="30" left="30" bottom="25">
			<s:stroke>
				<s:SolidColorStroke color="#ACACAC"/>
			</s:stroke>
		</s:Rect>
		
		<s:Image id="imageTarget1" x="100" y="110" width="80" height="50" rotation="0" scaleMode="stretch" mouseChildren="false"
				 smooth="true" source="@Embed('image1.jpg')" minHeight="20" minWidth="20" mouseDown="select(event)" mouseUp="upHandler(event)"/>
		<s:Image id="imageTarget2" x="180" y="180" width="80" height="50" rotation="0" scaleMode="stretch" mouseChildren="false"
				 smooth="true" source="@Embed('image2.jpg')" minHeight="20" minWidth="20" mouseDown="select(event)" mouseUp="upHandler(event)"/>
		<s:Image id="imageTarget3" x="260" y="110" width="80" height="50" rotation="0" scaleMode="stretch" mouseChildren="false"
				 smooth="true" source="@Embed('image3.jpg')" minHeight="20" minWidth="20" mouseDown="select(event)" mouseUp="upHandler(event)"/>
		
		<view:TransformTool id="tool" depth="3" transformation="tool_transformationCompleteHandler(event)">
			<connectors:UIConnector id="connector" padding="5"/>
			<view:bounds>
				<model:Bounds x="30" y="45" width="400" height="250"/>
			</view:bounds>
		</view:TransformTool>
		<s:Button x="93" y="-1" label="Button"/>
	</s:Group>
</s:Application>
